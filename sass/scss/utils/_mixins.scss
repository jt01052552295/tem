@charset 'utf-8';
/*

@mixin jb( $margin, $color: blue ) {
  margin: $margin;
  color: $color;
}

*/


@mixin important-text {
  //@extend, @include는 상단에 모아쓰고 그 뒤 빈 줄을 추가한다.


	// @warn "The `border-radius()` mixin will be deprecated in version 2.0.";
	// @error "Property #{$property} must be either left or right.";
	color: $red;
	font-size: 25px;
	font-weight: bold;

	@debug "debug test: #{$red}";
}


@mixin triangle($size, $color, $direction) {
  height: 0;
  width: 0;

  border-color: transparent;
  border-style: solid;
  border-width: $size / 2;

  @if $direction == up {
    border-bottom-color: $color;
  } @else if $direction == right {
    border-left-color: $color;
  } @else if $direction == down {
    border-top-color: $color;
  } @else if $direction == left {
    border-right-color: $color;
  } @else {
    @error "Unknown direction #{$direction}.";
  }
}


@mixin corner-icon($name, $top-or-bottom, $left-or-right) {
  .icon-#{$name} {
    background-image: url("/icons/#{$name}.svg");
    position: absolute;
    #{$top-or-bottom}: 0;
    #{$left-or-right}: 0;
  }
}


@mixin hover() {
  &:hover { @content; }
}

@mixin hover-focus() {
  &:hover,
  &:focus {
    @content;
  }
}

@mixin plain-hover-focus() {
  &,
  &:hover,
  &:focus {
    @content;
  }
}

@mixin hover-focus-active() {
  &:hover,
  &:focus,
  &:active {
    @content;
  }
}
